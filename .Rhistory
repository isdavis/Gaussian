vote_data$api<-ifelse(vote_data$eth==4, c(1), c(0))
votedata25$white<-ifelse(votedata25$eth==1, c(1), c(0))
votedata25<-subset(vote_data, vote_data$state.f25==1)
votedata25<-subset(vote_data, vote_data$state.f25==1)
View(votedata25)
# Create an rbf kernel which acts on some variable named temperature
k1 <- rbf('temperature')
# look at the parameters
summary(k1)
# plot covariance
plot(k1)
# look at some GPs drawn from this kernel
demoKernel(k1)
# make a fake 'true' function
f <- function(x) 2 * sin(x)
# make a fake dataset
x <- sort(runif(100, -2, 2))
y <- rpois(100, exp(f(x)))
df <- data.frame(y, x)
# fit a Poisson GP model with an rbf kernel
m <- gp(y ~ rbf('x'), data = df, family = poisson)
# predict from it
pred_df <- data.frame(x = seq(min(df$x), max(df$x), len = 500))
lambda <- predict(m, pred_df, type = 'response')
# plot the predicted rate parameter, the true model and the data
plot(lambda ~ pred_df$x, type = 'l', lwd = 2, ylim = range(y))
lines(exp(f(pred_df$x)) ~ pred_df$x, lty = 2)
points(y ~ x, data = df)
gp(formula = )
View(vote_data)
summary(vote_data$stt)
state.f<-factor(vote_data$stt)
dummies<-model.matrix(~state.f)
vote_data$white<-ifelse(vote_data$eth==1, c(1), c(0))
vote_data$black<-ifelse(vote_data$eth==2, c(1), c(0))
vote_data$hisp<-ifelse(vote_data$eth==3, c(1), c(0))
vote_data$api<-ifelse(vote_data$eth==4, c(1), c(0))
vote_data<-cbind(vote_data, dummies)
summary(vote_data$state.f5)
votedata5<-subset(vote_data, vote_data$state.f5==1)
View(votedata5)
mean(votedata5$rvote[votedata5$eth == 1], na.rm = TRUE) #white mean republican vote proportion
mean(votedata5$rvote[votedata5$eth == 2], na.rm = TRUE) #black
mean(votedata5$rvote[votedata5$eth == 3], na.rm = TRUE) #asian/hispanic
mean(votedata5$rvote[votedata5$eth == 4], na.rm = TRUE) #asian/hispanic
output = lm(rvote ~ eth, data = votedata5) #we need to make dummy variables for ethnicity to isolate its effect
output = lm(rvote ~ white, data = votedata5)
library(gpe)
getwd()
setwd("/Users/noahbardash/Documents/GitHub/Gaussian")
vote_data = read.delim("votingdata.dat")
mean(vote_data$rvote, na.rm = TRUE)
output = lm(rvote ~ eth + stt, data = vote_data)
output
# Create an rbf kernel which acts on some variable named temperature
k1 <- rbf('temperature')
# look at the parameters
summary(k1)
# plot covariance
plot(k1)
# look at some GPs drawn from this kernel
demoKernel(k1)
# make a fake 'true' function
f <- function(x) 2 * sin(x)
# make a fake dataset
x <- sort(runif(100, -2, 2))
y <- rpois(100, exp(f(x)))
df <- data.frame(y, x)
# fit a Poisson GP model with an rbf kernel
m <- gp(y ~ rbf('x'), data = df, family = poisson)
# predict from it
pred_df <- data.frame(x = seq(min(df$x), max(df$x), len = 500))
lambda <- predict(m, pred_df, type = 'response')
# plot the predicted rate parameter, the true model and the data
plot(lambda ~ pred_df$x, type = 'l', lwd = 2, ylim = range(y))
lines(exp(f(pred_df$x)) ~ pred_df$x, lty = 2)
points(y ~ x, data = df)
# fit a Poisson GP model with an rbf kernel
m <- gp(y ~ rbf('x'), data = df, family = poisson)
gp(formula = )
View(vote_data)
summary(vote_data$stt)
ls()
setwd("/Users/noahbardash/Documents/GitHub/Gaussian")
library(devtools)
library(gpe)
?gp
getwd()
setwd("/Users/noahbardash/Documents/GitHub/Gaussian")
vote_data = read.delim("votingdata.dat")
mean(vote_data$rvote, na.rm = TRUE)
vote_data = na.exclude(vote_data) #cleaning of all missing data
summary(vote_data$stt)
state.f<-factor(vote_data$stt)
dummies<-model.matrix(~state.f)
vote_data$white<-ifelse(vote_data$eth==1, c(1), c(0))
vote_data$black<-ifelse(vote_data$eth==2, c(1), c(0))
vote_data$hisp<-ifelse(vote_data$eth==3, c(1), c(0))
vote_data$api<-ifelse(vote_data$eth==4, c(1), c(0))
vote_data<-cbind(vote_data, dummies)
summary(vote_data$state.f25)
votedata25<-subset(vote_data, vote_data$state.f25==1)
votedata25<-subset(vote_data, vote_data$state.f25==1)
mean(votedata25$rvote[votedata25$eth == 1], na.rm = TRUE) #white mean republican vote proportion
mean(votedata25$rvote[votedata25$eth == 2], na.rm = TRUE) #black
mean(votedata25$rvote[votedata25$eth == 3], na.rm = TRUE) #asian/hispanic
mean(votedata25$rvote[votedata25$eth == 4], na.rm = TRUE) #asian/hispanic
output = lm(rvote ~ eth, data = votedata25) #we need to make dummy variables for ethnicity to isolate its effect
output = lm(rvote ~ white, data = votedata25)
output
output = lm(rvote ~ white + sex, data = votedata25)
output #being white has a stronger affect on voting republican
vote.df25<-as.data.frame(votedata25)
vote.df25.reduced<-vote.df25[,c("rvote", "white")]
output<-gp(formula = rvote~rbf("white"), data = vote.df25.reduced, family = binomial)
plot(output$posterior$components$a, vote.df25.reduced$rvote)
my.prediction<-predict(output, vote.df25, type="response")
plot(my.prediction, vote.df25$white)
vote.df25<-as.data.frame(votedata25)
vote.df25
head(vote.df25)
vote.df25.reduced<-vote.df25[,c("rvote", "white", "sex")]
head(vote.df25.reduced)
head(vote.df25)
head(vote.df25.reduced)
output<-gp(formula = rvote~rbf("white"), data = vote.df25.reduced, family = binomial)
plot(output$posterior$components$a, vote.df25.reduced$rvote)
my.prediction<-predict(output, vote.df25, type="response")
plot(my.prediction, vote.df25$white)
?rbf
output<-gp(formula = rvote~rbf("white", "sex"), data = vote.df25.reduced, family = binomial)
head(vote.df25.reduced)
vote.df25.reduced<-vote.df25[,c("rvote", "white", "sex")]
setwd("/Users/noahbardash/Documents/GitHub/Gaussian")
vote_data = read.delim("votingdata.dat")
mean(vote_data$rvote, na.rm = TRUE)
rm(list = ls())
library(devtools)
library(gpe)
?gp
getwd()
setwd("/Users/noahbardash/Documents/GitHub/Gaussian")
vote_data = read.delim("votingdata.dat")
mean(vote_data$rvote, na.rm = TRUE)
vote_data = na.exclude(vote_data) #cleaning of all missing data
summary(vote_data$stt)
state.f<-factor(vote_data$stt)
dummies<-model.matrix(~state.f)
vote_data$white<-ifelse(vote_data$eth==1, c(1), c(0))
vote_data$black<-ifelse(vote_data$eth==2, c(1), c(0))
vote_data$hisp<-ifelse(vote_data$eth==3, c(1), c(0))
vote_data$api<-ifelse(vote_data$eth==4, c(1), c(0))
vote_data$male<-ifelse(vote_data$sex==1, c(1), c(0))
vote_data$female<-ifelse(vote_data$sex==2, c(1), c(0))
vote_data<-cbind(vote_data, dummies)
summary(vote_data$state.f25)
votedata25<-subset(vote_data, vote_data$state.f25==1)
mean(votedata25$rvote[votedata25$eth == 1], na.rm = TRUE) #white mean republican vote proportion
mean(votedata25$rvote[votedata25$eth == 2], na.rm = TRUE) #black
mean(votedata25$rvote[votedata25$eth == 3], na.rm = TRUE) #asian/hispanic
mean(votedata25$rvote[votedata25$eth == 4], na.rm = TRUE) #asian/hispanic
mean(votedata25$rvote[votedata25$sex == 1], na.rm = TRUE) #male republican vote proportion
mean(votedata25$rvote[votedata25$sex == 2], na.rm = TRUE) #female
output = lm(rvote ~ eth, data = votedata25) #we need to make dummy variables for ethnicity to isolate its effect
output = lm(rvote ~ white, data = votedata25)
output
output = lm(rvote ~ white + sex, data = votedata25)
output #being white has a stronger affect on voting republican
vote.df25<-as.data.frame(votedata25)
head(vote.df25)
vote.df25.reduced<-vote.df25[,c("rvote", "white", "sex")]
head(vote.df25.reduced)
output<-gp(formula = rvote~rbf("male"), data = vote.df25.reduced, family = binomial)
output<-gp(formula = rvote~rbf("white"), data = vote.df25.reduced, family = binomial)
View(vote.df25)
test <- expand.grid("white", "male")
test
vote.df25.reduced<-vote.df25[,c("rvote", "white", "sex")]
test <- expand.grid("vote.df25.reduced$white", "vote.df25.reduced$male")
test
test <- expand.grid(vote.df25.reduced$white, vote.df25.reduced$male)
test
install.packages(lme4)
install.packages('lme4')
?glmer
### 14.1 how to include C++ in a package
library(Rcpp)
library(devtools)
library(roxygen2)
Rcpp.package.skeleton("easyEBMA2", cpp_files=c("./easyEM.cpp"))
current.code <- as.package("easyEBMA2")
load_all(current.code)
document(current.code)
#setting up
library(devtools)
install.packages("arm")
library(arm)
?lmer
setwd("/Users/noahbardash/Documents/GitHub/Gaussian")
getwd()
?glmer
install.packages('lme4')
install.packages("lme4")
library(lme4)
library(arm)
### recoding dataset for analysis
vote_data = na.exclude(vote_data) #cleaning of all missing data
state.f<-factor(vote_data$stt)
dummies<-model.matrix(~state.f)
vote_data<-cbind(vote_data, dummies)
vote_data$white<-ifelse(vote_data$eth==1, c(1), c(0))
vote_data$black<-ifelse(vote_data$eth==2, c(1), c(0))
vote_data$hisp<-ifelse(vote_data$eth==3, c(1), c(0))
vote_data$api<-ifelse(vote_data$eth==4, c(1), c(0))
vote_data$man<-ifelse(vote_data$sex==1, c(1), c(0)) #recode sex to 0 1 dummy instead of 1 2
vote_data$mar<-ifelse(vote_data$mar==1, c(1), c(0)) #recode married to 0 1
vote_data$kid<-ifelse(vote_data$kid==1, c(1), c(0)) #recode kid to 0 1
vote_data$WM<-ifelse(vote_data$white==1 & vote_data$sex==1, c(1), c(0)) #White Male combined variable
vote_data$WF<-ifelse(vote_data$white==1 & vote_data$sex==0, c(1), c(0)) #White female combined variable
vote_data$NWM<-ifelse(vote_data$white==0 & vote_data$sex==1, c(1), c(0)) #Nonwhite Male combined variable
vote_data$NWF<-ifelse(vote_data$white==0 & vote_data$sex==0, c(1), c(0)) #Nonwhite female combined variable
votedata25<-subset(vote_data, vote_data$state.f25==1) #using only 25th state for now
mean(votedata25$rvote[votedata25$eth == 1], na.rm = TRUE) #white mean republican vote proportion
mean(votedata25$rvote[votedata25$eth == 2], na.rm = TRUE) #black
mean(votedata25$rvote[votedata25$eth == 3], na.rm = TRUE) #asian/hispanic
mean(votedata25$rvote[votedata25$eth == 4], na.rm = TRUE) #asian/hispanic
mean(votedata25$rvote[votedata25$sex == 1], na.rm = TRUE) #male republican vote proportion
mean(votedata25$rvote[votedata25$sex == 2], na.rm = TRUE) #female
#basic multivariate regression analysis
output = lm(rvote ~ eth, data = votedata25) #we need to make dummy variables for ethnicity to isolate its effect
output = lm(rvote ~ white, data = votedata25)
output
output = lm(rvote ~ white + sex, data = votedata25)
output #being white has a stronger affect on voting republican
?glmer
install.packages("lme4")
library(arm)
library(lme4)
### recoding dataset for analysis
vote_data = na.exclude(vote_data) #cleaning of all missing data
state.f<-factor(vote_data$stt)
dummies<-model.matrix(~state.f)
vote_data<-cbind(vote_data, dummies)
vote_data$white<-ifelse(vote_data$eth==1, c(1), c(0))
vote_data$black<-ifelse(vote_data$eth==2, c(1), c(0))
vote_data$hisp<-ifelse(vote_data$eth==3, c(1), c(0))
vote_data$api<-ifelse(vote_data$eth==4, c(1), c(0))
vote_data$man<-ifelse(vote_data$sex==1, c(1), c(0)) #recode sex to 0 1 dummy instead of 1 2
vote_data$mar<-ifelse(vote_data$mar==1, c(1), c(0)) #recode married to 0 1
vote_data$kid<-ifelse(vote_data$kid==1, c(1), c(0)) #recode kid to 0 1
vote_data$WM<-ifelse(vote_data$white==1 & vote_data$sex==1, c(1), c(0)) #White Male combined variable
vote_data$WF<-ifelse(vote_data$white==1 & vote_data$sex==0, c(1), c(0)) #White female combined variable
vote_data$NWM<-ifelse(vote_data$white==0 & vote_data$sex==1, c(1), c(0)) #Nonwhite Male combined variable
vote_data$NWF<-ifelse(vote_data$white==0 & vote_data$sex==0, c(1), c(0)) #Nonwhite female combined variable
votedata25<-subset(vote_data, vote_data$state.f25==1) #using only 25th state for now
mean(votedata25$rvote[votedata25$eth == 1], na.rm = TRUE) #white mean republican vote proportion
mean(votedata25$rvote[votedata25$eth == 2], na.rm = TRUE) #black
mean(votedata25$rvote[votedata25$eth == 3], na.rm = TRUE) #asian/hispanic
mean(votedata25$rvote[votedata25$eth == 4], na.rm = TRUE) #asian/hispanic
mean(votedata25$rvote[votedata25$sex == 1], na.rm = TRUE) #male republican vote proportion
mean(votedata25$rvote[votedata25$sex == 2], na.rm = TRUE) #female
#basic multivariate regression analysis
output = lm(rvote ~ eth, data = votedata25) #we need to make dummy variables for ethnicity to isolate its effect
output = lm(rvote ~ white, data = votedata25)
output
output = lm(rvote ~ white + sex, data = votedata25)
output #being white has a stronger affect on voting republican
#using gp function to do analysis
vote.df25<-as.data.frame(votedata25)
vote.df25.reduced<-vote.df25[,c("rvote", "white", "man", "mar", "kid")]
output<-gp(formula = rvote~rbf(c("white", "man")), data = vote.df25.reduced, family = binomial) ### compare output of this with lmer output. see pdf on doc for assistance
my.prediction<-predict(output, vote.df25, type="response")
table(my.prediction) #there are four possible probabilities of voting republican (associated with white male, nonwhite male, white female, nonwhite female)
plot(output$posterior$components$a, vote.df25.reduced$rvote)
plot(my.prediction, vote.df25$white)
?glmer
#working with glmer function
var1 = as.factor(vote.df25.reduced$white)
var2 = as.factor(vote.df25.reduced$man)
var3 = as.factor(vote.df25.reduced$mar)
check = glmer(formula = rvote ~ (1|kid) + var1 + var2, data = vote.df25.reduced, family = binomial) #may need more variables (white man...nonwhite woman)
install.packages('lme4')
library(lme4)
?gp
?glmer
#working with glmer function
var1 = as.factor(vote.df25.reduced$white)
var2 = as.factor(vote.df25.reduced$man)
var3 = as.factor(vote.df25.reduced$mar)
check = glmer(formula = rvote ~ (1|kid) + var1 + var2, data = vote.df25.reduced, family = binomial) #may need more variables (white man...nonwhite woman)
display(check)
library(lme4)
library(arm)
#setting up
library(devtools)
#working with glmer function
var1 = as.factor(vote.df25.reduced$white)
var2 = as.factor(vote.df25.reduced$man)
var3 = as.factor(vote.df25.reduced$mar)
check = glmer(formula = rvote ~ (1|kid) + var1 + var2, data = vote.df25.reduced, family = binomial) #may need more variables (white man...nonwhite woman)
display(check)
plot(check)
?glmer
### recoding dataset for analysis
vote_data = na.exclude(vote_data) #cleaning of all missing data
View(vote_data)
vote_data <- vote_date[!(vote_data$stt==12),]
vote_data <- vote_data[!(vote_data$stt==12),]
View(vote_data)
bar <- subset(vote_data, vote_data$stt == 12)
bar
vote_data = read.delim("votingdata.dat") #read in dataset
### recoding dataset for analysis
vote_data = na.exclude(vote_data) #cleaning of all missing data
vote_datatest <- vote_data[(vote_data$stt==12),] #nonremoval of Hawaii
View(vote_datatest)
#using gp function to do analysis
vote.df25<-as.data.frame(votedata25)
?glmer
#working with glmer function
vote.df25.reduced<-vote.df25[,c("rvote", "WM", "WF", "NWM", "NWF")]
var1 = as.factor(vote.df25.reduced$WM)
var2 = as.factor(vote.df25.reduced$WF)
var3 = as.factor(vote.df25.reduced$NWM)
var4 = as.factor(vote.df25.reduced$NWF)
check = glmer(formula = rvote ~ (1|kid) + var1 + var2, data = vote.df25.reduced, family = binomial) #may need more variables (white man...nonwhite woman)
check = glmer(formula = rvote ~ (1|WM) + var1 + var2, data = vote.df25.reduced, family = binomial) #may need more variables (white man...nonwhite woman)
#using gp function to do analysis
vote.df25<-as.data.frame(votedata25)
vote.df25.reduced<-vote.df25[,c("rvote", "white", "man", "mar", "kid")]
output<-gp(formula = rvote~rbf(c("white", "man")), data = vote.df25.reduced, family = binomial) ### compare output of this with lmer output. see pdf on doc for assistance
#setting up
library(devtools)
library(arm)
?lmer
library(gpe)
library(lme4)
?gp
#using gp function to do analysis
vote.df25<-as.data.frame(votedata25)
vote.df25.reduced<-vote.df25[,c("rvote", "white", "man", "mar", "kid")]
output<-gp(formula = rvote~rbf(c("white", "man")), data = vote.df25.reduced, family = binomial) ### compare output of this with lmer output. see pdf on doc for assistance
my.prediction<-predict(output, vote.df25, type="response")
table(my.prediction) #there are four possible probabilities of voting republican (associated with white male, nonwhite male, white female, nonwhite female)
plot(output$posterior$components$a, vote.df25.reduced$rvote)
plot(my.prediction, vote.df25$white)
?glmer
#working with glmer function
vote.df25.reduced<-vote.df25[,c("rvote", "WM", "WF", "NWM", "NWF")]
var1 = as.factor(vote.df25.reduced$WM)
var2 = as.factor(vote.df25.reduced$WF)
var3 = as.factor(vote.df25.reduced$NWM)
var4 = as.factor(vote.df25.reduced$NWF)
check = glmer(formula = rvote ~ (1|kid) + var1 + var2, data = vote.df25.reduced, family = binomial) #may need more variables (white man...nonwhite woman)
vote_data$kid<-ifelse(vote_data$kid==1, c(1), c(0)) #recode kid to 0 1
vote.df25.reduced<-vote.df25[,c("rvote", "white", "man", "mar", "kid")]
#working with glmer function
vote.df25.reduced<-vote.df25[,c("rvote", "WM", "WF", "NWM", "NWF")]
var1 = as.factor(vote.df25.reduced$WM)
var2 = as.factor(vote.df25.reduced$WF)
var3 = as.factor(vote.df25.reduced$NWM)
var4 = as.factor(vote.df25.reduced$NWF)
check = glmer(formula = rvote ~ (1|kid) + var1 + var2, data = vote.df25.reduced, family = binomial) #may need more variables (white man...nonwhite woman)
check = glmer(formula = rvote ~ (1|WM) + var1 + var2, data = vote.df25.reduced, family = binomial) #may need more variables (white man...nonwhite woman)
check = glmer(formula = rvote ~ (1|kid) + var1 + var2, data = vote.df25.reduced, family = binomial) #may need more variables (white man...nonwhite woman)
#working with glmer function
vote.df25.reduced<-vote.df25[,c("rvote", "WM", "WF", "NWM", "NWF", "kid")]
check = glmer(formula = rvote ~ (1|kid) + var1 + var2, data = vote.df25.reduced, family = binomial) #may need more variables (white man...nonwhite woman)
var1
check = glmer(formula = rvote ~ (1|WM) + var1 + var2, data = vote.df25.reduced, family = binomial) #may need more variables (white man...nonwhite woman)
#using gp function to do analysis
vote.df25<-as.data.frame(votedata25)
vote.df25.reduced<-vote.df25[,c("rvote", "white", "man", "mar", "kid")]
output<-gp(formula = rvote~rbf(c("white", "man")), data = vote.df25.reduced, family = binomial) ### compare output of this with lmer output. see pdf on doc for assistance
my.prediction<-predict(output, vote.df25, type="response")
as.data.frame(table(my.prediction)) #there are four possible probabilities of voting republican (associated with white male, nonwhite male, white female, nonwhite female)
plot(output$posterior$components$a, vote.df25.reduced$rvote)
output<-gp(formula = rvote~rbf(c("man", "white", "mar", "kid")), data = vote.df25.reduced, family = binomial)
my.prediction<-predict(output, vote.df25, type="response")
as.data.frame(table(my.prediction)) #there are 16 possibilities
plot(output$posterior$components$a, vote.df25.reduced$rvote)
my.prediction
table(my.prediction)
#setting up
library(devtools)
library(arm)
?lmer
library(gpe)
library(lme4)
?gp
setwd("/Users/noahbardash/Documents/GitHub/Gaussian")
vote_data = read.delim("votingdata.dat") #read in dataset
### recoding dataset for analysis
vote_data = na.exclude(vote_data) #cleaning of all missing data
vote_data <- vote_data[!(vote_data$stt==12),] #removal of Hawaii
state.f<-factor(vote_data$stt)
dummies<-model.matrix(~state.f)
vote_data<-cbind(vote_data, dummies)
vote_data$white<-ifelse(vote_data$eth==1, c(1), c(0))
vote_data$black<-ifelse(vote_data$eth==2, c(1), c(0))
vote_data$hisp<-ifelse(vote_data$eth==3, c(1), c(0))
vote_data$api<-ifelse(vote_data$eth==4, c(1), c(0))
# dummy variables for sex
vote_data$male <- ifelse(vote_data$sex==1, c(1), c(0))
vote_data$female <- ifelse(vote_data$sex==2, c(1), c(0))
# order might be off, and these might not be proper categories
# dummy variables for education
vote_data$noHS <- ifelse(vote_data$edu==1, c(1), c(0))
vote_data$HSgrad <- ifelse(vote_data$edu==2, c(1), c(0))
vote_data$somecollege <- ifelse(vote_data$edu==3, c(1), c(0))
vote_data$bachelors <- ifelse(vote_data$edu==4, c(1), c(0))
vote_data$adv_degree <- ifelse(vote_data$edu==5, c(1), c(0))
vote_data$man<-ifelse(vote_data$sex==1, c(1), c(0)) #recode sex to 0 1 dummy instead of 1 2
vote_data$mar<-ifelse(vote_data$mar==1, c(1), c(0)) #recode married to 0 1
vote_data$kid<-ifelse(vote_data$kid==1, c(1), c(0)) #recode kid to 0 1
vote_data$WM<-ifelse(vote_data$white==1 & vote_data$man==1, c(1), c(0)) #White Male combined variable
votedata25<-subset(vote_data, vote_data$state.f25==1) #using only 25th state for now
mean(votedata25$rvote[votedata25$eth == 1], na.rm = TRUE) #white mean republican vote proportion
mean(votedata25$rvote[votedata25$eth == 2], na.rm = TRUE) #black
mean(votedata25$rvote[votedata25$eth == 3], na.rm = TRUE) #asian/hispanic
mean(votedata25$rvote[votedata25$eth == 4], na.rm = TRUE) #asian/hispanic
mean(votedata25$rvote[votedata25$sex == 1], na.rm = TRUE) #male republican vote proportion
mean(votedata25$rvote[votedata25$sex == 2], na.rm = TRUE) #female
#basic multivariate regression analysis
#we need to make dummy variables for ethnicity to isolate its effect
output = lm(rvote ~ white, data = votedata25)
output
output = lm(rvote ~ white + sex, data = votedata25)
output #being white has a stronger affect on voting republican
#using gp function to do analysis
vote.df25<-as.data.frame(votedata25)
vote.df25.reduced<-vote.df25[,c("rvote", "white", "man", "mar", "kid")]
output<-gp(formula = rvote~rbf(c("white", "man")), data = vote.df25.reduced, family = binomial) ### compare output of this with lmer output. see pdf on doc for assistance
my.prediction<-predict(output, vote.df25, type="response")
table(my.prediction)
as.data.frame(table(my.prediction)) #there are four possible probabilities of voting republican (associated with white male, nonwhite male, white female, nonwhite female)
View(vote_data)
#basic multivariate regression analysis
#we need to make dummy variables for ethnicity to isolate its effect
output = lm(rvote ~ white, data = votedata25)
output
output = lm(rvote ~ white + sex, data = votedata25)
output #being white has a stronger effect on voting republican
#basic multivariate regression analysis
#we need to make dummy variables for ethnicity to isolate its effect
output = lm(rvote ~ noHS, data = votedata25)
output
output = lm(rvote ~ HSgrad, data = votedata25)
output
output = lm(rvote ~ somecollege, data = votedata25)
output
#basic multivariate regression analysis
#we need to make dummy variables for ethnicity to isolate its effect
output = lm(rvote ~ noHS, data = votedata25)
output
output = lm(rvote ~ HSgrad, data = votedata25)
output
output = lm(rvote ~ somecollege, data = votedata25)
output
output = lm(rvote ~ bachelors, data = votedata25)
output
output = lm(rvote ~ adv_degree, data = votedata25)
output
output = lm(rvote ~ black, data = votedata25)
output
output = lm(rvote ~ white, data = votedata25)
output
output = lm(rvote ~ api, data = votedata25)
output
output = lm(rvote ~ hisp, data = votedata25)
output
output<-gp(formula = rvote~rbf(c("man", "white", "mar", "kid")), data = vote.df25.reduced, family = binomial)
my.prediction<-predict(output, vote.df25, type="response")
as.data.frame(table(unique(my.prediction)) #there are 16 possibilities
output<-gp(formula = rvote~rbf(c("man", "white", "mar", "kid")), data = vote.df25.reduced, family = binomial)
my.prediction<-predict(output, vote.df25, type="response")
output<-gp(formula = rvote~rbf(c("man", "white", "mar", "kid")), data = vote.df25.reduced, family = binomial)
my.prediction<-predict(output, vote.df25, type="response")
as.data.frame(table(my.prediction)) #there are 16 possibilities
?predict
my.prediction
unique(my.prediction)
my.prediction <- unique(my.prediction)
as.data.frame(table(my.prediction)) #there are 16 possibilities
?gp
?rbf
vote_data = read.delim("votingdata.dat") #read in dataset
### recoding dataset for analysis
vote_data = na.exclude(vote_data) #cleaning of all missing data
vote_data <- vote_data[!(vote_data$stt==12),] #removal of Hawaii
state.f<-factor(vote_data$stt)
dummies<-model.matrix(~state.f)
vote_data<-cbind(vote_data, dummies)
vote_data$white<-ifelse(vote_data$eth==1, c(1), c(0))
vote_data$black<-ifelse(vote_data$eth==2, c(1), c(0))
vote_data$hisp<-ifelse(vote_data$eth==3, c(1), c(0))
vote_data$api<-ifelse(vote_data$eth==4, c(1), c(0))
# dummy variables for sex
vote_data$male <- ifelse(vote_data$sex==1, c(1), c(0))
vote_data$female <- ifelse(vote_data$sex==2, c(1), c(0))
# order might be off, and these might not be proper categories
# dummy variables for education
vote_data$noHS <- ifelse(vote_data$edu==1, c(1), c(0))
vote_data$HSgrad <- ifelse(vote_data$edu==2, c(1), c(0))
vote_data$somecollege <- ifelse(vote_data$edu==3, c(1), c(0))
vote_data$bachelors <- ifelse(vote_data$edu==4, c(1), c(0))
vote_data$adv_degree <- ifelse(vote_data$edu==5, c(1), c(0))
my.prediction <- unique(my.prediction)
output<-gp(formula = rvote~rbf(c("white", "man")), data = vote.df25.reduced, family = binomial) ### compare output of this with lmer output. see pdf on doc for assistance
my.prediction<-predict(output, vote.df25, type="response")
my.prediction <- unique(my.prediction)
table(my.prediction)
